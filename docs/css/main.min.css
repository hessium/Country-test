/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
@import url("db.onlinewebfonts.com/c/575fc498ad34ad0f411e618dad9ed36a?family=Graphik+LC+Web+Regular");
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 0.05556rem dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -0.11111rem;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

html {
  font-size: 18px;
  overflow-x: hidden; }
  html.locked {
    overflow: hidden; }

html,
body {
  height: 100%; }

body {
  font-size: 18px;
  font-family: "Graphik LC Web Regular";
  font-weight: 400;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smothing: grayscale;
  position: relative;
  color: #252627; }

.main {
  width: 100%;
  height: 100%; }

.wrapper {
  width: 100%; }

.container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  padding-left: 50px;
  padding-right: 50px; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  font-weight: normal; }

table {
  border-collapse: collapse; }

ul {
  padding: 0;
  margin: 0; }
  ul li {
    list-style: none; }

p {
  padding: 0;
  margin: 0; }

footer {
  position: relative; }

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

a {
  color: #fff;
  text-decoration: none; }

img {
  max-width: 100%;
  height: auto;
  display: block; }

.header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0 auto;
  background: transparent;
  width: 100%;
  position: absolute; }
  .header__wrapper {
    max-width: 1440px;
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    padding: 30px 50px 21px; }
  .header .logo {
    position: relative;
    font-size: 24px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    color: #fff;
    font-weight: 700;
    cursor: pointer;
    -ms-flex-negative: 0;
    flex-shrink: 0; }
    .header .logo__icon {
      width: 40px;
      height: 40px;
      margin-right: 10px;
      fill: #fff; }
  .header .search {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; }

.header.active {
  background-color: white; }
  .header.active .menu__link {
    color: #252627; }
    .header.active .menu__link:hover {
      color: #1E5AAF; }
      .header.active .menu__link:hover .menu__link--icon {
        stroke: #1E5AAF; }
  .header.active .menu__link--icon {
    stroke: #797A84; }
    .header.active .menu__link--icon:hover {
      stroke: #1E5AAF; }
  .header.active .logo {
    color: #1E5AAF; }
    .header.active .logo__icon {
      fill: #1E5AAF; }
    .header.active .logo__link {
      color: #1E5AAF; }
  .header.active .btn__search--icon {
    stroke: #252627; }
    .header.active .btn__search--icon:hover {
      stroke: #1E5AAF; }
  .header.active .btn__origin {
    color: #DF0050; }
    .header.active .btn__origin:hover {
      color: #0F3974;
      border-color: #0F3974; }
  .header.active .btn__buy {
    color: #fff;
    background-color: #0F57BE; }
    .header.active .btn__buy:hover {
      color: #DF0050;
      border-color: #DF0050;
      background-color: #fff; }

.header__fixed {
  position: fixed;
  left: 0;
  top: 0;
  z-index: 100000;
  background-color: white;
  -webkit-filter: drop-shadow(0px 0px 10px rgba(6, 31, 67, 0.3));
  filter: drop-shadow(0px 0px 10px rgba(6, 31, 67, 0.3)); }
  .header__fixed .menu__link {
    color: #252627; }
    .header__fixed .menu__link:hover {
      color: #1E5AAF; }
      .header__fixed .menu__link:hover .menu__link--icon {
        stroke: #1E5AAF; }
  .header__fixed .menu__link--icon {
    stroke: #797A84; }
    .header__fixed .menu__link--icon:hover {
      stroke: #1E5AAF; }
  .header__fixed .logo {
    color: #1E5AAF; }
    .header__fixed .logo__icon {
      fill: #1E5AAF; }
    .header__fixed .logo__link {
      color: #1E5AAF; }
  .header__fixed .btn__search--icon {
    stroke: #252627; }
    .header__fixed .btn__search--icon:hover {
      stroke: #1E5AAF; }
  .header__fixed .btn__origin {
    color: #DF0050; }
    .header__fixed .btn__origin:hover {
      color: #0F3974;
      border-color: #0F3974; }
  .header__fixed .btn__buy {
    color: #fff;
    background-color: #0F57BE; }
    .header__fixed .btn__buy:hover {
      color: #DF0050;
      border-color: #DF0050;
      background-color: #fff; }

.hero {
  padding-bottom: 84px;
  height: 100%; }
  .hero-section {
    background: url("../img/back.png") center center/cover no-repeat;
    height: 548px;
    margin-bottom: 50px;
    min-height: 548px; }
  .hero__content {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
    height: 100%; }
  .hero__title {
    font-size: 80px;
    line-height: 88px;
    width: 50%;
    color: #fff; }
  .hero__link {
    font-weight: 500; }
    .hero__link--icon {
      width: 14px;
      height: 9px;
      stroke: #fff;
      fill: none;
      margin-left: 8px;
      -webkit-transform: rotate(-90deg);
      transform: rotate(-90deg); }
    .hero__link:hover {
      color: #DF0050; }
      .hero__link:hover .hero__link--icon {
        stroke: #DF0050; }

.btn {
  border-radius: 25px;
  padding: 12px 20px;
  cursor: pointer;
  font-size: 18px; }
  .btn:hover {
    color: #DF0050; }
  .btn__search {
    padding: 0;
    width: 19px;
    height: 19px;
    fill: none;
    border: none;
    stroke: #FDFDFD;
    background-color: transparent; }
    .btn__search--icon {
      width: 19px;
      height: 19px; }
    .btn__search:hover {
      stroke: #DF0050; }
  .btn__origin {
    background-color: transparent;
    border: 2px solid #DF0050;
    color: #fff;
    margin-right: 15px; }
  .btn__buy {
    border: 2px solid transparent; }
    .btn__buy:hover {
      color: #DF0050;
      border: 2px solid #DF0050; }

.menu {
  position: relative; }
  @media screen and (max-width: 768px) {
    .menu {
      display: none; } }
  .menu__list {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; }
  .menu__item {
    margin-right: 36px;
    font-weight: 500; }
  .menu__link {
    padding: 0 0 23px;
    font-size: 18px;
    line-height: 1,5;
    color: #fff; }
    .menu__link--icon {
      width: 14px;
      height: 9px;
      stroke: #fff;
      fill: none;
      margin-left: 8px; }
    .menu__link:hover {
      color: #DF0050; }
      .menu__link:hover .menu__link--icon {
        stroke: #DF0050; }
  .menu__sub-content {
    overflow: hidden;
    font-size: 0.88889rem;
    height: 0;
    -webkit-transition: height .3s;
    transition: height .3s;
    position: absolute;
    top: 100px;
    left: 0;
    z-index: 10000;
    width: 100vw;
    background-color: rgba(0, 0, 0, 0.4);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .menu__sub-block {
    width: 100%;
    height: 251px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    background: #fff;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    -ms-flex-line-pack: center;
    align-content: center;
    padding-left: 50px;
    padding-top: 50px; }
  .menu__sub-list {
    width: 100vw;
    height: 1000px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .menu__sub-item {
    margin-bottom: 30px;
    font-size: 18px;
    margin-bottom: 50px; }
  .menu__sub-link {
    color: #252627; }
    .menu__sub-link:hover {
      color: #1E5AAF; }

.menu__item.active .menu__link {
  border-bottom: 2px solid #fff; }
  .menu__item.active .menu__link .menu__link--icon {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg); }

.menu__item.active html {
  overflow: hidden; }

.menu__item.active .hero-section {
  overflow: hidden; }

.navigation {
  width: 100%;
  padding-right: 0;
  margin-bottom: 120px; }
  .navigation__list {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr; }
  .navigation__item {
    border-top: 1px solid #DADCE7;
    padding: 25px 0;
    margin-right: 45px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    padding-right: 15px; }
  .navigation__link {
    color: #252627; }
    .navigation__link--icon {
      width: 14px;
      height: 9px;
      stroke: #1E5AAF;
      fill: none;
      -webkit-transform: rotate(-90deg);
      transform: rotate(-90deg); }

.about-section {
  margin-bottom: 120px; }

.about__title {
  width: 45%;
  font-size: 40px;
  line-height: 1.3;
  color: #1E5AAF;
  margin-bottom: 40px; }

.about__desc {
  width: 50%;
  font-size: 24px;
  line-height: 1.4;
  margin-bottom: 30px;
  color: #797A84; }

.about__block {
  margin-top: 90px; }

.about__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.about__item {
  width: 300px;
  padding: 35px;
  height: 413px;
  margin-right: 46px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  border: none;
  -webkit-filter: drop-shadow(0px 0px 10px rgba(6, 31, 67, 0.3));
  filter: drop-shadow(0px 0px 10px rgba(6, 31, 67, 0.3));
  border-radius: 5px;
  background: -webkit-gradient(linear, left top, left bottom, from(#092e62), to(#417cd1));
  background: linear-gradient(180deg, #092e62 0%, #417cd1 100%);
  -webkit-transition: background-color 1s ease-out 100ms;
  transition: background-color 1s ease-out 100ms; }
  .about__item:hover {
    background: #0F3974;
    -webkit-transform: scale(1.2);
    transform: scale(1.2); }
  .about__item--title {
    color: #fff;
    font-size: 24px;
    line-height: 1.2; }
  .about__item--desc {
    color: rgba(253, 253, 253, 0.5);
    font-size: 14px;
    line-height: 1.4; }
  .about__item:last-child {
    margin-right: 0; }
  .about__item--row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .about__item--link--icon {
    width: 14px;
    height: 9px;
    stroke: #fff;
    fill: none;
    -webkit-transform: rotate(-90deg);
    transform: rotate(-90deg);
    margin-left: 8px; }

.swiper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  padding-top: 80px; }
  .swiper-container {
    margin-bottom: 133px; }
  .swiper-wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .swiper__title {
    font-size: 40px;
    line-height: 52px;
    width: 60%;
    margin-bottom: 40px; }
  .swiper-slide {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-filter: drop-shadow(0px 0px 10px rgba(6, 31, 67, 0.3));
    filter: drop-shadow(0px 0px 10px rgba(6, 31, 67, 0.3)); }
    .swiper-slide__picture {
      width: 880px;
      height: 550px; }
    .swiper-slide__img {
      border-top-left-radius: 5px;
      border-bottom-left-radius: 5px;
      display: block;
      width: 100%;
      height: 100%;
      -o-object-fit: cover;
      object-fit: cover; }
    .swiper-slide__text {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      text-align: left;
      -webkit-box-align: start;
      -ms-flex-align: start;
      align-items: flex-start;
      -webkit-box-pack: left;
      -ms-flex-pack: left;
      justify-content: left;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      width: 460px;
      height: 550px;
      padding: 45px;
      background: -webkit-gradient(linear, left top, left bottom, from(#092e62), to(#417cd1));
      background: linear-gradient(180deg, #092e62 0%, #417cd1 100%);
      border-top-right-radius: 5px;
      border-bottom-right-radius: 5px; }
    .swiper-slide__desc {
      font-size: 24px;
      line-height: 33px;
      color: #fff;
      margin-bottom: 20px; }
    .swiper-slide__data {
      font-size: 16px;
      color: #8EA9D0;
      margin-bottom: 40px; }
    .swiper-slide__link {
      font-size: 18px;
      position: relative; }
      .swiper-slide__link::before {
        content: url("../img/strelka.svg");
        position: absolute;
        right: -20px; }
  .swiper__link {
    position: absolute;
    color: #1E5AAF;
    font-size: 18px;
    line-height: 18px;
    font-weight: 500;
    top: 4%;
    right: 50px; }

.swiperSmall-container {
  padding-right: 0;
  margin-bottom: 120px; }
  @media (min-width: 1491px) {
    .swiperSmall-container {
      padding-right: 50px; } }

.slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  width: 879px;
  height: 575px;
  -webkit-filter: drop-shadow(0px 0px 10px rgba(6, 31, 67, 0.3));
  filter: drop-shadow(0px 0px 10px rgba(6, 31, 67, 0.3));
  border-radius: 5px;
  background: -webkit-gradient(linear, left top, left bottom, from(#092e62), to(#417cd1));
  background: linear-gradient(180deg, #092e62 0%, #417cd1 100%);
  padding: 61px 97px 64px 110px; }
  .slide__user {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between; }
  .slide .user__text {
    width: 446px;
    margin-right: 135px;
    margin-bottom: 76px; }
  .slide .user__name {
    font-size: 24px;
    line-height: 32px;
    margin-bottom: 20px;
    color: #fff;
    text-transform: uppercase; }
  .slide .user__desc {
    color: #557EB8;
    font-size: 14px;
    line-height: 18px; }
  .slide .user__avatar {
    width: 89px;
    height: 89px; }
  .slide .user__img {
    border-radius: 50%; }
  .slide .user__comment {
    width: 590px;
    font-size: 30px;
    line-height: 42px;
    color: #9FB7DB;
    margin-bottom: 40px;
    padding-right: 30px; }
  .slide__links {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between; }
  .slide__link--icon {
    width: 14px;
    height: 9px;
    stroke: #fff;
    fill: none;
    -webkit-transform: rotate(-90deg);
    transform: rotate(-90deg); }

.swiper-button {
  color: #1E5AAF;
  width: 11px;
  height: 22px;
  top: 7%; }
  .swiper-button::after {
    font-size: 22px; }

.swiper-button-next {
  left: 50px; }

.swiper-button-prev {
  left: 10px;
  color: #1E5AAF; }

.footer {
  background-color: #051A2C;
  height: 218px;
  padding-top: 47px;
  padding-bottom: 44px; }
  .footer__title {
    margin-bottom: 50px;
    font-size: 24px;
    line-height: 29px;
    color: #fff; }
  .footer__list {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    width: 100%; }
  .footer__item {
    color: #8C8D98;
    margin-right: 40px;
    font-size: 16px; }
    .footer__item:nth-child(1) {
      margin-right: 22px; }
    .footer__item--desc {
      width: 197px; }
    .footer__item:nth-child(3) {
      margin-right: 254px; }
    .footer__item--link {
      color: #8C8D98; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
